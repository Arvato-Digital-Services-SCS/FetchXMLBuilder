<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="tm.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>